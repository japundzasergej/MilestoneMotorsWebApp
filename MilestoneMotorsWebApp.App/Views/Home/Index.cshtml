@using MilestoneMotorsWebApp.Common.Utilities
@using System.Security.Claims
@using X.PagedList
@using X.PagedList.Mvc.Core
@using System.Web
@using MilestoneMotorsWebApp.Domain.Enums
@inject IHttpContextAccessor contextAccessor
@model X.PagedList.IPagedList<Car>
@{
    ViewData["Title"] = "Home Page";
}

@{
    var isAuthenticated = !string.IsNullOrEmpty(contextAccessor.HttpContext.Session.GetString("JwtToken"));

    string? userId = null;

    if (isAuthenticated)
    {
        var jwtToken = contextAccessor.HttpContext.Session.GetString("JwtToken");

        if (!string.IsNullOrEmpty(jwtToken))
        {
            var tokenHandler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
            var jsonToken = tokenHandler.ReadToken(jwtToken) as System.IdentityModel.Tokens.Jwt.JwtSecurityToken;

            if (jsonToken != null)
            {
                userId = jsonToken.Claims.FirstOrDefault(claim => claim.Type == "nameid")?.Value;
            }
        }
    }
}

<article class="index-page">
    <partial name="_SuccessNotification" />
    <section class="jumbotron text-center">
        <div class="container">
            <h4 class="display-4">Quality Drives, Better Prices</h4>
            <p class="lead text-muted">
                Explore our curated collection of quality used cars. Each vehicle is carefully inspected for reliability. Trust us to connect you with reputable sellers for a worry-free buying experience.
            </p>
            <partial name="_ErrorNotification"/>
            <div class="d-flex flex-column flex-md-row justify-content-md-between align-items-center">
                @if (!isAuthenticated)
                {
                    <p class="lead mb-3" style="font-weight: 500">Please register to create listings.</p>
                }
                else
                {
                    <p class="lead mb-3" style="font-weight: 500"><a asp-controller="User" asp-action="MyListings">Create a new listing</a></p>
                }
            </div>
            <p class="mb-3">
                <form class="d-flex" method="get" asp-action="Index" asp-controller="Home">
                    <input class="form-control me-sm-2" style="margin-right: 5px;" name="search" type="search" placeholder="Search" value="@ViewBag.Search">
                    <button class="btn btn-primary my-2" type="submit" style="font-size: 16px;">Search</button>
                </form>
            </p>

            <div class="d-flex justify-content-between mb-3">
                <button class="btn btn-outline-primary" type="button" data-toggle="collapse" data-target="#collapseFilters" aria-expanded="false" aria-controls="collapseFilters" id="filtersButton">
                    <span><i class="bi bi-ui-radios"></i>&nbsp;Filters</span>
                </button>
                <a id="clearFiltersButton" href="@Url.Action("Index", new {
                    search = ViewBag.Search,
                    page = ViewBag.Page,
                    orderBy = (string)null,
                    fuelTypeFilter = (string)null, 
                    conditionFilter = (string)null,
                    brandFilter = (string)null})" class="btn btn-outline-danger">
                    <i class="fas fa-times"></i>
                    &nbsp;Clear filters
                </a>
            </div>
            <div class="collapse mb-4" id="collapseFilters">
                <div class="card card-body">
                    <div class="row mb-2">
                        <div class="col filter-col">
                            <button class="filter-buttons btn btn-outline-secondary" style="margin-right: 5px;">
                                <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"><i class="fas fa-car"></i>&nbsp;Fuel Type</a>
                                <div class="dropdown-menu overflow-auto" style="max-height: 200px;">
                                    <div class="d-flex flex-column text-center">
                                        @foreach (var c in Enum.GetValues(typeof(FuelTypes)))
                                        {
                                            <a class="filter-link" href="@Url.Action("Index", new { fuelTypeFilter = c, search = ViewBag.Search, orderBy = ViewBag.OrderBy, page = (string)null })">
                                                @c.ToString()
                                            </a>
                                            <hr />
                                        }
                                    </div>
                                </div>
                            </button>
                        </div>
                        <div class="col filter-col">
                            <button class="filter-buttons btn btn-outline-secondary" style="margin-right: 5px;">
                                <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"><i class="bi bi-building"></i>&nbsp;Car Brand</a>
                                <div class="dropdown-menu overflow-auto" style="max-height: 200px;">
                                    <div class="d-flex flex-column text-center">
                                        @foreach (var c in Enum.GetValues(typeof(Brand)))
                                        {
                                            <a class="filter-link" href="@Url.Action("Index", new { brandFilter = c, search = ViewBag.Search, orderBy = ViewBag.OrderBy, page = (string)null })">
                                                @c.ToString()
                                            </a>
                                            <hr />
                                        }
                                    </div>
                                </div>
                            </button>
                        </div>
                        <div class="col filter-col">
                            <button class="filter-buttons btn btn-outline-secondary" style="margin-right: 5px;">
                                <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false"><i class="bi bi-check"></i>&nbsp;Car Condition</a>
                                <div class="dropdown-menu">
                                    <div class="d-flex flex-column text-center">
                                        @foreach(var c in Enum.GetValues<Condition>())
                                        {
                                            <a class="filter-link" href="@Url.Action("Index", new { conditionFilter = c, search = ViewBag.Search, orderBy = ViewBag.OrderBy, page = (string)null })">@c.ToString()</a>
                                            <hr>
                                        }
                                    </div>
                                </div>
                            </button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col filter-col">
                            <a class="filter-buttons btn btn-outline-secondary" style="margin-right: 5px;" href="@Url.Action("Index", new { orderBy = "priceDesc", search = ViewBag.Search, fuelTypeFilter = ViewBag.FuelTypeFilter, bodyTypeFilter = ViewBag.BodyTypeFilter, brandFilter = ViewBag.BrandFilter, page = ViewBag.Page })"><i class="fas fa-sort-amount-down"></i>&nbsp;By Price</a>
                        </div>
                        <div class="col filter-col">
                            <a class="filter-buttons btn btn-outline-secondary" style="margin-right: 5px;" href="@Url.Action("Index", new { orderBy = "priceAsc", search = ViewBag.Search, fuelTypeFilter = ViewBag.FuelTypeFilter, bodyTypeFilter = ViewBag.BodyTypeFilter, brandFilter = ViewBag.BrandFilter, page = ViewBag.Page })">
                                <i class="fas fa-sort-amount-up"></i>&nbsp;By Price
                            </a>
                        </div>
                        <div class="col filter-col">
                            <a class="filter-buttons btn btn-outline-secondary" style="margin-right: 5px;" href="@Url.Action("Index", new { orderBy = "yearDesc", search = ViewBag.Search, fuelTypeFilter = ViewBag.FuelTypeFilter, bodyTypeFilter = ViewBag.BodyTypeFilter, brandFilter = ViewBag.BrandFilter, page = ViewBag.Page })">
                                <i class="fas fa-sort-amount-down"></i>&nbsp;By Year
                            </a>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </section>

    <section>
        <div class="album py-5 bg-light">
            <div class="container">

                @if (Model.Count > 0)
                {
                    <div class="row responsive-card-columns">
                        @foreach (var car in Model)
                        {
                            <div class="col-md-4 col-sm-6">
                                <div class="card mb-4 box-shadow">
                                    <a asp-controller="Home" asp-action="Detail" asp-route-id="@car.Id">
                                        <div style="max-height: 214.5px; min-height: 214.5px; overflow: hidden;">
                                            @if(!(string.IsNullOrEmpty(car.HeadlinerImageUrl)))
                                            {
                                                <img style="width: 100%; height: 100%; object-fit: cover;" class="card-img-top" src="@car.HeadlinerImageUrl" alt="@string.Concat(car.Brand, " ", car.Model, " ", car.ManufacturingYear)" />
                                            } else
                                            {
                                                <img style="width: 100%; height: 100%; object-fit: cover;" class="card-img-top" src="https://placehold.co/600x400?text=Milestone+Motors" alt="@string.Concat(car.Brand, " ", car.Model, " ", car.ManufacturingYear)" />
                                            }
                                        </div>
                                    </a>
                                    <div class="card-body" style="min-height: 250.516px; max-height: 250.516px;">
                                        <p class="card-text">
                                            @string.Concat(car.Brand, " ", car.Model, " ", car.ManufacturingYear)
                                        </p>
                                        <p class="card-text" style="margin-bottom: 4px;">
                                            <strong>
                                                @car.Price
                                            </strong>
                                        </p>
                                        <p class="card-text" style="min-height: 65.8px; max-height: 65.8px;">
                                            @{
                                                var description = car.Description;
                                                string charsAllowed;
                                                if (car.Description.Length <= 70)
                                                {
                                                    charsAllowed = description;
                                                }
                                                else
                                                {
                                                    charsAllowed = description.Substring(0, 71) + " ...";
                                                }

                                                @charsAllowed
                                            }
                                        </p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="btn-group" style="margin-bottom: 10px;">
                                                <a class="btn btn-sm btn-outline-secondary" asp-controller="Home" asp-action="Detail" asp-route-id="@car.Id">View</a>
                                                @if (userId != null && userId == car.UserId)
                                                {
                                                    <a asp-controller="Home" asp-action="Edit" asp-route-id="@car.Id" type="button" class="btn btn-sm btn-outline-primary">Edit</a>
                                                }
                                                @if (userId != null && userId == car.UserId)
                                                {

                                                    <button type="button" class="btn btn-sm btn-outline-danger" data-toggle="modal" data-target="#deleteCarModal_@car.Id">
                                                        Delete
                                                    </button>


                                                    <div class="modal fade" id="deleteCarModal_@car.Id" tabindex="-1" role="dialog" aria-labelledby="deleteCarModalTitle" aria-hidden="true">
                                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title" id="deleteCarModalTitle">Confirm deletion</h5>
                                                                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
                                                                </div>
                                                                <div class="modal-body">
                                                                    Are you sure you want to delete the listing
                                                                    @{
                                                                        @string.Concat(car.Brand, " ", car.Model, " ", car.ManufacturingYear)
                                                                    }
                                                                    ?
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                                                                    <button onclick="deleteCar(@car.Id)" class="btn btn-danger">Confirm deletion</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                }

                                            </div>
                                        </div>
                                        <div class="text-start">
                                            <small class="text-muted text-nowrap" style="font-size: 12px; margin-left: 5px;">
                                                @{
                                                    var serverTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Central European Standard Time");
                                                    var localTime = TimeZoneInfo.ConvertTimeFromUtc(car.CreatedAt, serverTimeZone);
                                                    @FormatDate.TimeAgo(localTime, serverTimeZone)
                                                }

                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                   <div class="pagination-container">
                        @Html.PagedListPager(Model, page => Url.Action("Index", new
                            {
                                page,
                                search = ViewBag.Search,
                                orderBy = ViewBag.OrderBy,
                                fuelTypeFilter = ViewBag.FuelTypeFilter,
                                conditionFilter = ViewBag.BodyTypeFilter,
                                brandFilter = ViewBag.BrandFilter
                            }))
                   </div>
                }
                else
                {
                    <p class="display-4" style="padding: 50px;">Nothing found...</p>
                }

            </div>
        </div>
    </section>
</article>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    const deleteCar = (carId) => {
        $.ajax({
            url: '/Home/Delete/' + carId,
            type: 'POST',
            success: () => location.reload(),
            error: () => window.location.href = '/Home/Index'
        });
    }
    $(document).ready(() => {
        $("#clearFiltersButton").hide();

        $("#filtersButton").click(() => {
            $("#clearFiltersButton").toggle();
        });
    });
</script>